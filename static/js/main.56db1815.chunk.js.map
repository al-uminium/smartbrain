{"version":3,"sources":["components/logo/brain.png","components/logo/Logo.js","components/imagelinkform/ImageLinkForm.js","components/facerecognition/FaceRecognition.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","className","options","max","style","height","width","paddingTop","src","brain","alt","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","onClick","FaceRecognition","imageUrl","box","id","top","tR","bottom","bR","left","lC","right","rC","app","Clarifai","App","apiKey","particleOptions","getBoundBox","data","boundBox","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","bottom_row","top_row","left_col","right_col","setState","event","input","target","value","state","models","predict","then","response","console","log","catch","err","rel","href","params","this","title","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.56db1815.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/brain.f1d6d8dd.png\";","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './brain.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className=\"ma4 mt0 pa3\">\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 35 }} style={{ height: 150, width: 150 }} >\r\n                <div className=\"Tilt-inner pa3\">\r\n                    <img style={{paddingTop: '5px'}}src={brain} alt=\"brain logo\"/>\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Logo","import React from 'react'\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n    return(\r\n        <div>\r\n            <p className=\"f3\">\r\n                {'This Magic Brain will detect faces in your pictures. Give it a try!'}\r\n            </p>\r\n            <div className=\"center\">\r\n                <div className=\"pa4 w-70 br3 shadow-5 center searchbox\">\r\n                    <input className=\"f4 pa2 w-70 center\" type='text' onChange={onInputChange}/>\r\n                    <button className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-blue br3\" onClick={onButtonSubmit}>Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm","import React from 'react'\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n    return(\r\n        <div className=\"center img\">\r\n            <img id='inputimage' className=\"face\" src={imageUrl} />\r\n            <div className=\"bounding-box\" style={{top: box.tR, bottom: box.bR, left: box.lC, right: box.rC, }}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FaceRecognition\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/navigation/navigation';\nimport Logo from './components/logo/Logo';\nimport Rank from './components/rank/rank';\nimport ImageLinkForm from './components/imagelinkform/ImageLinkForm';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/facerecognition/FaceRecognition';\n\nconst app = new Clarifai.App({apiKey: '672842eeb92541b38b897b2b80ad1bba'});\n\nconst particleOptions = {\n  \"particles\": {\n      \"number\": {\n          \"value\": 150\n      },\n      \"size\": {\n          \"value\": 1\n      }\n  },\n  \"interactivity\": {\n      \"events\": {\n          \"onhover\": {\n              \"enable\": true,\n              \"mode\": \"repulse\"\n          }\n      }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n    }\n  }\n\n  getBoundBox = (data) => {\n    const boundBox = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    \n    const box = {\n      bR: height - (boundBox.bottom_row*height),\n      tR: boundBox.top_row*height,\n      lC: boundBox.left_col*width,\n      rC: width - (boundBox.right_col*width),\n    }\n\n    this.setState({\n      box: box,\n    })\n  }\n\n  onInputChange = (event) => {\n    this.setState({\n      input: event.target.value\n    })\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models.predict('f76196b43bbd45c99b4f3cd8e8b40a8a', this.state.input)\n    .then(response => {\n      this.getBoundBox(response);\n      console.log()\n      })\n    .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n        <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@100&display=swap\" rel=\"stylesheet\" /> \n        <script src=\"https://cdn.rawgit.com/progers/pathseg/master/pathseg.js\"></script>\n        <Particles className=\"particles\" params={particleOptions} />\n        {/* {<Navigation />} */}\n        <Logo />\n        {/* {<Rank /> } */}\n        <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n        <FaceRecognition imageUrl={this.state.imageUrl} box={this.state.box} />\n        <footer>\n          <div className=\"v-btm\">Icons made by <a href=\"https://www.flaticon.com/authors/smashicons\" title=\"Smashicons\">Smashicons</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}